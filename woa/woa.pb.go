// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: woa.proto

package woa

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

// CheckSignatureReq 签名校验接口请求
type CheckSignatureReq struct {
	Signature            string   `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Timestamp            int64    `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nonce                int64    `protobuf:"varint,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Echostr              string   `protobuf:"bytes,4,opt,name=echostr,proto3" json:"echostr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckSignatureReq) Reset()         { *m = CheckSignatureReq{} }
func (m *CheckSignatureReq) String() string { return proto.CompactTextString(m) }
func (*CheckSignatureReq) ProtoMessage()    {}
func (*CheckSignatureReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_105fe7df5fe4560f, []int{0}
}
func (m *CheckSignatureReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSignatureReq.Unmarshal(m, b)
}
func (m *CheckSignatureReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSignatureReq.Marshal(b, m, deterministic)
}
func (m *CheckSignatureReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSignatureReq.Merge(m, src)
}
func (m *CheckSignatureReq) XXX_Size() int {
	return xxx_messageInfo_CheckSignatureReq.Size(m)
}
func (m *CheckSignatureReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSignatureReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSignatureReq proto.InternalMessageInfo

func (m *CheckSignatureReq) GetSignature() string {
	if m != nil {
		return m.Signature
	}
	return ""
}

func (m *CheckSignatureReq) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CheckSignatureReq) GetNonce() int64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *CheckSignatureReq) GetEchostr() string {
	if m != nil {
		return m.Echostr
	}
	return ""
}

// CheckSignatureReq 签名校验接口回报
type CheckSignatureRsp struct {
	Echostr              string   `protobuf:"bytes,1,opt,name=echostr,proto3" json:"echostr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckSignatureRsp) Reset()         { *m = CheckSignatureRsp{} }
func (m *CheckSignatureRsp) String() string { return proto.CompactTextString(m) }
func (*CheckSignatureRsp) ProtoMessage()    {}
func (*CheckSignatureRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_105fe7df5fe4560f, []int{1}
}
func (m *CheckSignatureRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckSignatureRsp.Unmarshal(m, b)
}
func (m *CheckSignatureRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckSignatureRsp.Marshal(b, m, deterministic)
}
func (m *CheckSignatureRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckSignatureRsp.Merge(m, src)
}
func (m *CheckSignatureRsp) XXX_Size() int {
	return xxx_messageInfo_CheckSignatureRsp.Size(m)
}
func (m *CheckSignatureRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckSignatureRsp.DiscardUnknown(m)
}

var xxx_messageInfo_CheckSignatureRsp proto.InternalMessageInfo

func (m *CheckSignatureRsp) GetEchostr() string {
	if m != nil {
		return m.Echostr
	}
	return ""
}

// MessageReq 接受普通消息接口请求
type MessageReq struct {
	ToUserName           string   `protobuf:"bytes,1,opt,name=to_user_name,json=toUserName,proto3" json:"to_user_name,omitempty" xml:"ToUserName,cdata,omitempty"`
	FromUserName         string   `protobuf:"bytes,2,opt,name=from_user_name,json=fromUserName,proto3" json:"from_user_name,omitempty" xml:"FromUserName,cdata,omitempty"`
	CreateTime           int64    `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" xml:"CreateTime,omitempty"`
	MsgType              string   `protobuf:"bytes,4,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty" xml:"MsgType,cdata,omitempty"`
	Content              string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty" xml:"Content,cdata,omitempty"`
	MsgId                int64    `protobuf:"varint,7,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty" xml:"MsgId,omitempty"`
	MsgDataId            int64    `protobuf:"varint,8,opt,name=msg_data_id,json=msgDataId,proto3" json:"msg_data_id,omitempty" xml:"MsgDataId,omitempty"`
	Idx                  int64    `protobuf:"varint,9,opt,name=idx,proto3" json:"idx,omitempty" xml:"Id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageReq) Reset()         { *m = MessageReq{} }
func (m *MessageReq) String() string { return proto.CompactTextString(m) }
func (*MessageReq) ProtoMessage()    {}
func (*MessageReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_105fe7df5fe4560f, []int{2}
}
func (m *MessageReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageReq.Unmarshal(m, b)
}
func (m *MessageReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageReq.Marshal(b, m, deterministic)
}
func (m *MessageReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageReq.Merge(m, src)
}
func (m *MessageReq) XXX_Size() int {
	return xxx_messageInfo_MessageReq.Size(m)
}
func (m *MessageReq) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageReq.DiscardUnknown(m)
}

var xxx_messageInfo_MessageReq proto.InternalMessageInfo

func (m *MessageReq) GetToUserName() string {
	if m != nil {
		return m.ToUserName
	}
	return ""
}

func (m *MessageReq) GetFromUserName() string {
	if m != nil {
		return m.FromUserName
	}
	return ""
}

func (m *MessageReq) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MessageReq) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *MessageReq) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *MessageReq) GetMsgId() int64 {
	if m != nil {
		return m.MsgId
	}
	return 0
}

func (m *MessageReq) GetMsgDataId() int64 {
	if m != nil {
		return m.MsgDataId
	}
	return 0
}

func (m *MessageReq) GetIdx() int64 {
	if m != nil {
		return m.Idx
	}
	return 0
}

// MessageRsp 接受普通消息接口回包
type MessageRsp struct {
	ToUserName           string   `protobuf:"bytes,1,opt,name=to_user_name,json=toUserName,proto3" json:"to_user_name,omitempty" xml:"ToUserName,cdata,omitempty"`
	FromUserName         string   `protobuf:"bytes,2,opt,name=from_user_name,json=fromUserName,proto3" json:"from_user_name,omitempty" xml:"FromUserName,cdata,omitempty"`
	CreateTime           int64    `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty" xml:"CreateTime,omitempty"`
	MsgType              string   `protobuf:"bytes,4,opt,name=msg_type,json=msgType,proto3" json:"msg_type,omitempty" xml:"MsgType,cdata,omitempty"`
	Content              string   `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty" xml:"Content,cdata,omitemptys"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageRsp) Reset()         { *m = MessageRsp{} }
func (m *MessageRsp) String() string { return proto.CompactTextString(m) }
func (*MessageRsp) ProtoMessage()    {}
func (*MessageRsp) Descriptor() ([]byte, []int) {
	return fileDescriptor_105fe7df5fe4560f, []int{3}
}
func (m *MessageRsp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRsp.Unmarshal(m, b)
}
func (m *MessageRsp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRsp.Marshal(b, m, deterministic)
}
func (m *MessageRsp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRsp.Merge(m, src)
}
func (m *MessageRsp) XXX_Size() int {
	return xxx_messageInfo_MessageRsp.Size(m)
}
func (m *MessageRsp) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRsp.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRsp proto.InternalMessageInfo

func (m *MessageRsp) GetToUserName() string {
	if m != nil {
		return m.ToUserName
	}
	return ""
}

func (m *MessageRsp) GetFromUserName() string {
	if m != nil {
		return m.FromUserName
	}
	return ""
}

func (m *MessageRsp) GetCreateTime() int64 {
	if m != nil {
		return m.CreateTime
	}
	return 0
}

func (m *MessageRsp) GetMsgType() string {
	if m != nil {
		return m.MsgType
	}
	return ""
}

func (m *MessageRsp) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func init() {
	proto.RegisterType((*CheckSignatureReq)(nil), "woa.CheckSignatureReq")
	proto.RegisterType((*CheckSignatureRsp)(nil), "woa.CheckSignatureRsp")
	proto.RegisterType((*MessageReq)(nil), "woa.MessageReq")
	proto.RegisterType((*MessageRsp)(nil), "woa.MessageRsp")
}

func init() { proto.RegisterFile("woa.proto", fileDescriptor_105fe7df5fe4560f) }

var fileDescriptor_105fe7df5fe4560f = []byte{
	// 577 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x54, 0xcb, 0x6e, 0xd3, 0x40,
	0x14, 0x95, 0x13, 0xda, 0x34, 0xd3, 0xaa, 0x88, 0x51, 0x5b, 0x5c, 0xab, 0x8d, 0x8d, 0x85, 0xaa,
	0x08, 0x95, 0x18, 0xc1, 0xae, 0x14, 0x21, 0x25, 0xa8, 0x12, 0x12, 0x41, 0x28, 0x0d, 0x1b, 0x36,
	0xd1, 0xc4, 0x99, 0x3a, 0x86, 0xcc, 0x5c, 0x33, 0x33, 0x79, 0xad, 0x90, 0xf8, 0x05, 0x3e, 0x89,
	0x4f, 0x60, 0x6f, 0x36, 0x7c, 0x81, 0x77, 0xec, 0x90, 0xc7, 0x71, 0x13, 0xb7, 0x81, 0x2f, 0x60,
	0x77, 0xe7, 0x9c, 0x7b, 0xce, 0x5c, 0xcd, 0xd1, 0x5c, 0x54, 0x9d, 0x02, 0x69, 0x44, 0x02, 0x14,
	0xe0, 0xf2, 0x14, 0x88, 0x75, 0x14, 0x00, 0x04, 0x23, 0xea, 0x91, 0x28, 0xf4, 0x08, 0xe7, 0xa0,
	0x88, 0x0a, 0x81, 0xcb, 0xac, 0xc5, 0xba, 0x3f, 0x21, 0xa3, 0x70, 0x40, 0x14, 0xf5, 0xf2, 0x62,
	0x41, 0xec, 0x05, 0x10, 0x80, 0x2e, 0xbd, 0xb4, 0xca, 0x50, 0xf7, 0x0b, 0xba, 0xd7, 0x1a, 0x52,
	0xff, 0xd3, 0x65, 0x18, 0x70, 0xa2, 0xc6, 0x82, 0x76, 0xe8, 0x67, 0x7c, 0x84, 0xaa, 0x32, 0x3f,
	0x9b, 0x86, 0x63, 0xd4, 0xab, 0x9d, 0x25, 0x90, 0xb2, 0x2a, 0x64, 0x54, 0x2a, 0xc2, 0x22, 0xb3,
	0xe4, 0x18, 0xf5, 0x72, 0x67, 0x09, 0xe0, 0x3d, 0xb4, 0xc1, 0x81, 0xfb, 0xd4, 0x2c, 0x6b, 0x26,
	0x3b, 0x60, 0x13, 0x55, 0xa8, 0x3f, 0x04, 0xa9, 0x84, 0x79, 0x47, 0xfb, 0xe5, 0x47, 0xf7, 0xf1,
	0xad, 0x01, 0x64, 0xb4, 0xda, 0x6e, 0x14, 0xdb, 0x7f, 0x97, 0x11, 0x6a, 0x53, 0x29, 0x49, 0xa0,
	0x27, 0xbd, 0x40, 0x3b, 0x0a, 0x7a, 0x63, 0x49, 0x45, 0x8f, 0x13, 0xb6, 0x18, 0xb6, 0xf9, 0x30,
	0x89, 0x6d, 0x67, 0xc6, 0x46, 0x67, 0x6e, 0x17, 0xde, 0x4b, 0x2a, 0xde, 0x12, 0x46, 0x4f, 0xfd,
	0x01, 0x51, 0xe4, 0x14, 0x58, 0xa8, 0x28, 0x8b, 0xd4, 0xdc, 0xed, 0x20, 0x75, 0x4d, 0xe2, 0x37,
	0x68, 0xf7, 0x4a, 0x00, 0x5b, 0x71, 0x2a, 0x69, 0xa7, 0x93, 0x24, 0xb6, 0x5d, 0xed, 0x74, 0x21,
	0x80, 0xfd, 0xdd, 0x6b, 0xe7, 0x6a, 0x85, 0xc6, 0x2f, 0xd1, 0xb6, 0x2f, 0x28, 0x51, 0xb4, 0x97,
	0xbe, 0x4b, 0xf6, 0x12, 0xcd, 0x5a, 0x12, 0xdb, 0x96, 0xb6, 0x6a, 0x69, 0xae, 0x1b, 0x32, 0x5a,
	0x18, 0xc7, 0xbf, 0x86, 0xf1, 0x39, 0xda, 0x62, 0x32, 0xe8, 0xa9, 0x79, 0x44, 0xb3, 0xf7, 0x6a,
	0x3e, 0x48, 0x62, 0xfb, 0x58, 0xab, 0xdb, 0x32, 0xe8, 0xce, 0xa3, 0x35, 0x33, 0x54, 0x58, 0xc6,
	0xe0, 0xe7, 0xa8, 0xe2, 0x03, 0x57, 0x94, 0x2b, 0x73, 0xf3, 0x86, 0xb8, 0x95, 0xe1, 0x6b, 0xc4,
	0x0b, 0x05, 0x7e, 0x82, 0x36, 0xd3, 0xab, 0xc3, 0x81, 0x59, 0xd1, 0x63, 0x1f, 0x26, 0xb1, 0xbd,
	0x9f, 0x5f, 0xfc, 0x7a, 0xb0, 0xaa, 0xd9, 0x60, 0x29, 0x82, 0x5f, 0xa0, 0xed, 0x54, 0x91, 0x3a,
	0xa6, 0xb2, 0x2d, 0x2d, 0x3b, 0x4e, 0x62, 0xfb, 0x30, 0x97, 0xbd, 0x22, 0x8a, 0x14, 0xa5, 0x55,
	0x96, 0xa3, 0xb8, 0x8e, 0xca, 0xe1, 0x60, 0x66, 0x56, 0xb5, 0xec, 0x20, 0x89, 0x6d, 0xac, 0x65,
	0xc5, 0xfe, 0xb4, 0xc5, 0xfd, 0x59, 0x5a, 0x66, 0x2f, 0xa3, 0xff, 0xd9, 0xaf, 0xcb, 0xfe, 0xfc,
	0x66, 0xf6, 0x6e, 0x12, 0xdb, 0xb5, 0x7f, 0x65, 0x2f, 0x97, 0xe1, 0x3f, 0xfd, 0x6e, 0xa0, 0xad,
	0x77, 0x02, 0x66, 0xf3, 0xcb, 0x89, 0xc0, 0x43, 0xb4, 0x5b, 0xfc, 0x99, 0xf8, 0xa0, 0x91, 0xae,
	0xa2, 0x5b, 0xfb, 0xc2, 0x5a, 0x8b, 0xcb, 0xc8, 0x3d, 0xf9, 0xfa, 0xe3, 0xd7, 0xb7, 0x92, 0x83,
	0xf7, 0xbd, 0xc5, 0x0a, 0x9b, 0xcd, 0xe5, 0x44, 0x78, 0x2c, 0xcb, 0xb0, 0x9f, 0x7f, 0x6a, 0xdc,
	0x46, 0x95, 0x45, 0xae, 0xf8, 0xae, 0xb6, 0x5a, 0xfe, 0x70, 0xab, 0x08, 0xc8, 0xc8, 0x75, 0xb4,
	0xa9, 0xe5, 0xae, 0x37, 0x3d, 0x33, 0x1e, 0x35, 0x9d, 0x0f, 0xb5, 0x20, 0x54, 0xc3, 0x71, 0xbf,
	0xe1, 0x03, 0xf3, 0x3e, 0x52, 0x2e, 0x29, 0x0f, 0xc6, 0xe0, 0x65, 0xcb, 0x6f, 0x0a, 0xa4, 0xbf,
	0xa9, 0xcb, 0x67, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x1c, 0x08, 0x52, 0xce, 0x5b, 0x05, 0x00,
	0x00,
}
