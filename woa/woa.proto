syntax = "proto3";

package woa;

option go_package = "github.com/jensenguo/proto/woa";

import "google/api/annotations.proto";

import "validate/validate.proto";

import "gogoproto/gogo.proto";

// ProxySvr 微信公众号代理服务
service ProxySvr {
  // CheckSignature 签名校验接口
  rpc CheckSignature (CheckSignatureReq) returns (CheckSignatureRsp) {
    option (google.api.http) = {
        get: "/woa.proxysvr/message"
        response_body: "echostr"
    };
  }
  // Message 微信公众号消息回调接口（所有微信公众号消息使用这个接口）
  rpc Message (MessageReq) returns (MessageRsp) {
    option (google.api.http) = {
        post: "/woa.proxysvr/message"
        body: "*"
    };
  }
}

// CheckSignatureReq 签名校验接口请求
message CheckSignatureReq {
  string signature = 1;
  int64 timestamp = 2;
  int64 nonce = 3;
  string echostr = 4;
}

// CheckSignatureReq 签名校验接口回报
message CheckSignatureRsp {
  string echostr = 1;
}

// MessageReq 接受普通消息接口请求
message MessageReq {
    string to_user_name = 1 [(gogoproto.moretags) = 'xml:"ToUserName,cdata,omitempty"'];
    string from_user_name = 2 [(gogoproto.moretags) = 'xml:"FromUserName,cdata,omitempty"']; 
    int64 create_time = 3 [(gogoproto.moretags) = 'xml:"CreateTime,omitempty"'];
    string msg_type = 4 [(gogoproto.moretags) = 'xml:"MsgType,cdata,omitempty"'];
    string content = 6 [(gogoproto.moretags) = 'xml:"Content,cdata,omitempty"'];
    int64 msg_id = 7 [(gogoproto.moretags) = 'xml:"MsgId,omitempty"'];
    int64 msg_data_id = 8 [(gogoproto.moretags) = 'xml:"MsgDataId,omitempty"'];
    int64 idx = 9 [(gogoproto.moretags) = 'xml:"Id,omitempty"'];
}

// MessageRsp 接受普通消息接口回包
message MessageRsp {
  string to_user_name = 1 [(gogoproto.moretags) = 'xml:"ToUserName,cdata,omitempty"'];
  string from_user_name = 2 [(gogoproto.moretags) = 'xml:"FromUserName,cdata,omitempty"']; 
  int64 create_time = 3 [(gogoproto.moretags) = 'xml:"CreateTime,omitempty"'];
  string msg_type = 4 [(gogoproto.moretags) = 'xml:"MsgType,cdata,omitempty"'];
  string content = 6 [(gogoproto.moretags) = 'xml:"Content,cdata,omitemptys"'];
}