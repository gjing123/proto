syntax = "proto3";

package wxpay;

option go_package = "github.com/jensenguo/proto/shudong/wxpay";

import "google/api/annotations.proto";

import "validate/validate.proto";

import "gogoproto/gogo.proto";


// WexinPaySvr 微信支付服务
service WexinPaySvr {
  // Transactions 交易接口
  rpc Transactions (TransactionsReq) returns (TransactionsRsp) {
    option (google.api.http) = {
      post: "/shudong/wxpay/weixin_pay_svr/transactions"
      body: "*"
    };
  }
  // PayCallback 交易结果回调
  rpc PayCallback (PayCallbackReq) returns (PayCallbackRsp) {
    option (google.api.http) = {
      post: "/shudong/wxpay/weixin_pay_svr/pay_callback"
      body: "*"
    };
  }
  // GetUserOpenid 获取用户openid接口
  rpc GetUserOpenid (GetUserOpenidReq) returns (GetUserOpenidRsp) {
    option (google.api.http) = {
      post: "/shudong/wxpay/weixin_pay_svr/get_user_openid"
      body: "*"
    };
  }
}

/***************************微信支付服务*************************************/

// 微信交易接口
message TransactionsReq {
  string user_open_id = 1;
  enum VipType {
    Unknown = 0;
    Hour = 1; // 小时会员
    Day = 2; // 天会员
    Week = 3;   // 周会员
    Month = 4;  // 月会员
  } 
  VipType vip_type = 2;
}

message TransactionsRsp {
  string appid = 1;
  string prepay_id = 2; // 预支付订单
  string timestamp = 3;
  string nonce = 4;
  string package = 5;
  string sign_type = 6;
  string pay_sign = 7;
}

// 交易结果回调接口
message PayCallbackReq {
  string id = 1;
  string create_time = 2;
  string resource_type = 3;
  string event_type = 4;
  string summary = 5;
  message Resource {
    string original_type = 1;
    string algorithm = 2;
    string ciphertext = 3;
    string associated_data = 4;
    string nonce = 5;
  }
  Resource resource = 6;
}

message PayCallbackRsp {
  string code = 1;
  string message = 2;
}

 // 获取用户openid接口
message GetUserOpenidReq {
  string code = 1;
}

message GetUserOpenidRsp {
  string openid = 1;
}

/**************************其他接口协议*****************************/
message GetAccessTokenRsp {
  string access_token = 1;
  int64 expires_in = 2;
  string refresh_token = 3;
  string openid = 4;
  string scope = 5;
  string unionid = 6;
}

message WxTransactionsReq {
  string mchid = 1;
  string out_trade_no = 2;
  string appid = 3;
  string description = 4;
  string notify_url = 5;
  message Amount {
    int64 total = 1;
    string currency = 2;
  } 
  Amount amount = 6;
  message Payer {
    string openid = 1;
  } 
  Payer payer = 7;
}

message WxTransactionsRsp {
  string prepay_id = 1;
}